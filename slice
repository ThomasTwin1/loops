# Slicing is written as:
# list[start:stop:step]

# Start
# start is where the list starts inclusive of the first item in the list [0::] #output: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8]
# The list starts at index(also known as the position) 0 which contains the value of -1
# If there is no number at the beginning of the slice then it will default to index 0 like so:
# [:::] #output [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8]

# Stop
# stop is where the list ends exclusive of the last item of the list which in this case is the number 9.
# This list currently contains:
squares = []
for value in range(1,11):
    squares.append(value-2)

print(squares) #output: [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8]
# The range function in the for loop is 1 to 11
# That means when value = 1, the calculation value - 2 is performed:
# 1 - 2 = -1
# This cycle continues until value = 10
# 10 - 2 = 8
# After looping through the range of numbers up to 10 the variable squares contains [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8]
# The range function will stop at 10 and exclude looping through 11.
# If you want to include 11 you must increase the range to 12.
# Use the slice to stop the list at any index:
# [:2:]

counts = []
for value in range(1,11):
    counts.append(value-2)

forward_counts = counts[:9:]
print(forward_counts)
# In this example the slice stops the list at index 8 which holds the value of 7.
# Count the positions of this list starting with index 0 which holds the value -1.
# index 0:-1
# index 1: 0
# index 2: 1
# index 3: 2
# index 4: 3
# index 5: 4
# index 6: 5
# index 7: 6
# index 8: 7
# index 9: 8
# index 10: 9
# Stopping the slice at 9 excludes index 9 and 10
